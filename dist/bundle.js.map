{"version":3,"file":"bundle.js","mappings":"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","sources":["webpack://card_game/webpack/bootstrap","webpack://card_game/webpack/runtime/define property getters","webpack://card_game/webpack/runtime/hasOwnProperty shorthand","webpack://card_game/./assets/components/delay.ts","webpack://card_game/./assets/components/stopwatch.ts","webpack://card_game/./assets/components/game.ts","webpack://card_game/./assets/components/app.ts"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","export function delay(ms: number) {\n    return new Promise((resolve) => setTimeout(resolve, ms));\n}\n","import { endTimerW, endTimerL, timer } from './app';\n\nlet minutes = 0;\nlet seconds = 0;\nlet interval: any;\n\n// Функция для обновления времени\nexport function updateTime() {\n    seconds++;\n    if (seconds === 60) {\n        minutes++;\n        seconds = 0;\n    }\n\n    // Выводим время на страницу\n    timer.textContent =\n        (minutes < 10 ? '0' : '') +\n        minutes +\n        '.' +\n        (seconds < 10 ? '0' : '') +\n        seconds;\n\n    endTimerL.textContent =\n        (minutes < 10 ? '0' : '') +\n        minutes +\n        '.' +\n        (seconds < 10 ? '0' : '') +\n        seconds;\n\n    endTimerW.textContent =\n        (minutes < 10 ? '0' : '') +\n        minutes +\n        '.' +\n        (seconds < 10 ? '0' : '') +\n        seconds;\n}\n\n// Функция для запуска секундомера\nexport function startTimer() {\n    interval = setInterval(updateTime, 1000);\n}\n\n// Функция для остановки секундомера\nexport function stopTimer() {\n    clearInterval(interval);\n}\n\n// Функция для сброса секундомера\nexport function resetTimer() {\n    minutes = 0;\n    seconds = 0;\n    timer.textContent = '00.00';\n}\n","import { gamePage, losePage, winPage } from './app';\nimport { delay } from './delay';\nimport { startTimer, stopTimer } from './stopwatch';\n\nconst suits: Array<string> = ['hearts', 'clubs', 'diamonds', 'spades'];\nconst ranks: Array<string> = ['A', 'K', 'Q', 'J', '10', '9', '8', '7', '6'];\nconst cards: Array<cards> = [];\n\ninterface cards {\n    suit: string;\n    rank: string;\n}\n\ninterface userSetting {\n    time: string;\n    difficulty: string;\n}\n\nconst randomCards = (suits: string[], ranks: string[], cards: Array<cards>) => {\n    for (let i = 0; i < cards.length; i++) {\n        cards[i] = {\n            suit: suits[Math.floor(Math.random() * (3 - 0 + 1))],\n            rank: ranks[Math.floor(Math.random() * (8 - 0 + 1))],\n        };\n    }\n    cards.forEach((element) => {\n        cards.push(element);\n    });\n\n    cards.sort(() => Math.random() - 0.5);\n};\n\nconst renderFrontCard = (cards: Array<cards>) => {\n    let cardHtml = '';\n    cardHtml = cards\n        .map((card) => {\n            return `<div class=\"scene scene--card\">\n            <div data-card=\"${card.rank}-${card.suit}\" class=\"card-flip\">\n                <div class=\"card__face card__face--front\">\n                <div class=\"card\">\n                        <div class=\"card-left\">\n                            <div class=\"card-name\">${card.rank}</div>\n                            <div class=\"card-suit card-suit_small\"><img width=\"9px\" src=\"./assets/img/${card.suit}.png\" alt=\"\"></div>\n                        </div>\n                        <div class=\"card-suit\"><img src=\"./assets/img/${card.suit}.png\" alt=\"\"></div>\n                        <div class=\"card-right\">\n                            <div class=\"card-name\">${card.rank}</div>\n                            <div class=\"card-suit card-suit_small\"><img width=\"9px\" src=\"./assets/img/${card.suit}.png\" alt=\"\"></div>\n                        </div>\n                </div>          \n                </div>\n                <div class=\"card__face card__face--back\"></div>\n            </div>\n        </div>`;\n        })\n        .join('');\n\n    return cardHtml;\n};\n\nexport function renderGame(obj: userSetting, gameDeck: any) {\n    switch (obj.difficulty) {\n        case 'easy':\n            cards.length = 3;\n            randomCards(suits, ranks, cards);\n            gameDeck.innerHTML = `<div class=\"cards-container cards-container_easy\">${renderFrontCard(\n                cards,\n            )}</div>`;\n            break;\n        case 'medium':\n            cards.length = 6;\n            randomCards(suits, ranks, cards);\n            gameDeck.innerHTML = `<div class=\"cards-container cards-container_medium\">${renderFrontCard(\n                cards,\n            )}</div>`;\n            break;\n        case 'hard':\n            cards.length = 9;\n            randomCards(suits, ranks, cards);\n            gameDeck.innerHTML = `<div class=\"cards-container cards-container_hard\">${renderFrontCard(\n                cards,\n            )}</div>`;\n            break;\n    }\n\n    const playGame = () => {\n        const cardsToCompare: Array<any> = [];\n        const cardsList = document.querySelectorAll('.card-flip');\n        renderFrontCard(cards);\n        delay(5000).then(() => {\n            flipAllCards(cardsList);\n            startTimer();\n            cardsList.forEach((card) => {\n                card.addEventListener('click', () => {\n                    flipCard(card);\n                    delay(1000).then(() => {\n                        if (card instanceof HTMLElement) {\n                            cardsToCompare.push(card.dataset.card);\n                        }\n\n                        if (cardsToCompare.length % 2 === 0) {\n                            if (\n                                cardsToCompare[0] === cardsToCompare[1] &&\n                                cardsToCompare[2] === cardsToCompare[3] &&\n                                cardsToCompare[4] === cardsToCompare[5] &&\n                                cardsToCompare[6] === cardsToCompare[7] &&\n                                cardsToCompare[8] === cardsToCompare[9] &&\n                                cardsToCompare[10] === cardsToCompare[11] &&\n                                cardsToCompare[12] === cardsToCompare[13] &&\n                                cardsToCompare[14] === cardsToCompare[15] &&\n                                cardsToCompare[16] === cardsToCompare[17]\n                            ) {\n                                console.log();\n                            } else {\n                                // alert('YOU LOSE!');\n                                stopTimer();\n                                losePage.classList.remove('hidden');\n                                gamePage.classList.add('hidden');\n                            }\n\n                            if (cardsToCompare.length === cards.length) {\n                                // alert('YOU WIN!');\n                                stopTimer();\n                                winPage.classList.remove('hidden');\n                                gamePage.classList.add('hidden');\n                            }\n                        }\n                    });\n                });\n            });\n        });\n    };\n\n    const flipCard = (cardElement: any) => {\n        cardElement.classList.toggle('is-flipped');\n    };\n\n    const flipAllCards = (cardsElement: any) => {\n        cardsElement.forEach((card: any) => {\n            card.classList.toggle('is-flipped');\n        });\n    };\n\n    playGame();\n}\n","import '../styles/style.css';\nimport { renderGame } from './game';\nimport { resetTimer, stopTimer } from './stopwatch';\n\nconst startBtn: any = document.querySelector('.first_page__start-btn');\nconst chooseDiff = document.getElementsByName(\n    'difficult',\n) as NodeListOf<HTMLInputElement>;\nexport const startPage: any = document.querySelector('.first_page__nav');\nexport const gamePage: any = document.querySelector('.game_page');\nconst restartBtn: any = document.querySelector('.game_page__top-restart-btn');\nexport const gameDeck: any = document.querySelector('.cards');\nexport const winPage: any = document.querySelector('.win');\nexport const losePage: any = document.querySelector('.lose');\nconst playAgainBtnL: any = document.querySelector('.btn-lose');\nconst playAgainBtnW: any = document.querySelector('.btn-win');\nexport const timer: any = document.querySelector('.game_page__top-counter');\nexport const endTimerL: any = document.querySelector('.timer-lose');\nexport const endTimerW: any = document.querySelector('.timer-win');\n\nexport let userSetting = { time: '', difficulty: '' };\n\ninterface userSetting {\n    time: string;\n    difficulty: string;\n}\n\nstartBtn.addEventListener('click', () => {\n    for (let i = 0; i < chooseDiff.length; i++) {\n        if (chooseDiff[i].checked === true) {\n            userSetting.difficulty = chooseDiff[i].id;\n\n            startPage.classList.add('hidden');\n            gamePage.classList.remove('hidden');\n\n            renderGame(userSetting, gameDeck);\n        }\n    }\n});\n\nrestartBtn.addEventListener('click', () => {\n    stopTimer();\n    resetTimer();\n    startPage.classList.remove('hidden');\n    gamePage.classList.add('hidden');\n});\n\nplayAgainBtnL.addEventListener('click', () => {\n    stopTimer();\n    resetTimer();\n    losePage.classList.add('hidden');\n    startPage.classList.remove('hidden');\n});\n\nplayAgainBtnW.addEventListener('click', () => {\n    stopTimer();\n    resetTimer();\n    winPage.classList.add('hidden');\n    startPage.classList.remove('hidden');\n});\n"],"names":["__webpack_require__","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","delay","ms","Promise","resolve","setTimeout","interval","minutes","seconds","updateTime","timer","textContent","endTimerL","endTimerW","stopTimer","clearInterval","resetTimer","suits","ranks","cards","randomCards","i","length","suit","Math","floor","random","rank","forEach","element","push","sort","renderFrontCard","map","card","join","renderGame","gameDeck","difficulty","innerHTML","cardsToCompare","cardsList","document","querySelectorAll","then","classList","toggle","setInterval","addEventListener","HTMLElement","dataset","console","log","losePage","remove","gamePage","add","winPage","startBtn","querySelector","chooseDiff","getElementsByName","startPage","restartBtn","playAgainBtnL","playAgainBtnW","userSetting","time","checked","id"],"sourceRoot":""}